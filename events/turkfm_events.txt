###################################
# OTTOMAN & TURKISH FLAVOR EVENTS #
###################################
# Events contained here pertain to the Ottoman Empire / Turkish State
# The Eastern Question was once its own module, but has been merged to reflect the evolution of this module in its own right
# Note: Arab Flavor is out of scope for GBBF; I'll elaborate on this in the future

####################

# For Greek content, see the "grefm" module
# For Turkish content, see the "turkfm" module
# For Balkan Nations content, see the "balkfm" module
# For Orthodox Church content, see the "eocfm" module

####################

namespace = turkfm

####################

####	TABLE OF CONTENTS	####	#TOC

# You can use the #TURK_ comments to ctrl+F your way through the event list
# The ## before an event indicates content not yet implemented; the >> indicates an event being moved in from another event module
# [XXX] refers to events that occur only if other mods are present and detected

##  #TURK0  THE LAST STRUGGLE OF THE OTTOMAN EMPIRE  Events  001-099  ##

#001-009 - Sick Man Mainline Events
#	001 - The Sick Man of Europe (TUR)
#	002 - 
#	003 - 
#	004 - 
#	005 - 
#	006 - 
#	007 - The Empire Shattered
#	008 - The Dead Man of Europe
#	009 - The Healthy Man of Europe

#010-019 - The Reign of Murad II

#020-029 - The Reign of Abdulmecid

#030-039 - First Constitutional Era Events

#040-049 - İstibdat Era Event

#050-059 - Second Constitutional Era Events

#060-069 - Emergence of the Young Turks Events
#	069 - The Committee of Union and Progress

#070-079 - Atatürk Events


##  #TURK1  THE REORDERING OF THE EMPIRE  Events 200-299  ##

#100-109 - Tanzimat Events I
#	100 - The Decaying Empire

#110-119 - Tanzimat Events II
#	110 - ##Modernized Agriculture
#	111 - ##A Formidable Army
#	112 - ##Stately Governance
#	113 - ##Revitalizing the Economy
#	114 - ##An Educated Populace
#	115 - ##Equality Before the Law
#	116 - ##Countrysides Secured
#	117 - ##
#	118 - ##
#	119 - ##

##  #TURK2  THE OTTOMAN MILLET SYSTEM  Events 100-199  ##

#200-209 - Millet Narrative Events
#	200 - The Millet System
#	201 - ##The Rise of Nationalism
#	202 - OPEN
#	203 - OPEN
#	204 - OPEN
#	205 - OPEN
#	206 - OPEN
#	207 - OPEN
#	208 - Region Lost
#	209 - Region Secured

#210-219 - Millet Neutral Events
#	210 - Extortionate Taxation in State
#	211 - Plague Outbreak in State
#	212 - Ecumenical Patriarch Demands Protections
#	213 - OPEN
#	214 - OPEN
#	215 - OPEN
#	216 - OPEN
#	217 - OPEN
#	218 - OPEN
#	219 - OPEN

#220-229 - Millet Unrest Events
#	220 - OPEN
#	221 - OPEN
#	222 - OPEN
#	223 - OPEN
#	224 - OPEN
#	225 - OPEN
#	226 - OPEN
#	227 - OPEN
#	228 - OPEN
#	229 - OPEN

#230-239 - Millet Hostility Events  #### IMPORT FROM EQFM
#	230 - Churches Burned in State
#	231 - Popular Speaker Lynched in State
#	232 - Brigandage in State
#	233 - ##Port Burned in State
#	234 - ##
#	235 - 
#	236 - 
#	237 - 
#	238 - 
#	239 - 

#240-249 - Millet Deconfliction Events
#	240 - ##Dragoman Reduces Tensions
#	241 - ##Inter-faith Dialogue
#	242 - ##Great Power Mediates Local Conflict
#	243 - ##
#	244 - OPEN
#	245 - OPEN
#	246 - OPEN
#	247 - OPEN
#	248 - OPEN
#	249 - OPEN

#250-259 - Millet Revolt Events
#	250 - Riots in State
#	251 - Violence in State Worsens
#	252 - Massacre in State
#	253 - State Rebellion Suppressed
#	254 - [TECH] Creates a Revolter Tag
#	255 - Balkan Country Rebellion
#	256 - OPEN
#	257 - OPEN
#	258 - OPEN
#	259 - OPEN

#260-269 - OPEN
#	260 - OPEN
#	261 - OPEN
#	262 - OPEN
#	263 - OPEN
#	264 - OPEN
#	265 - OPEN
#	266 - OPEN
#	267 - OPEN
#	268 - OPEN
# 	269 - OPEN
 
#270-279 - OPEN
#	270 - OPEN
#	271 - OPEN
#	272 - OPEN
#	273 - OPEN
#	274 - OPEN
#	275 - OPEN
#	276 - OPEN
#	277 - OPEN
#	278 - OPEN
#	279 - OPEN


##  TURK3  EASTERN QUESTION EVENTS  Events 300-399  ##

#////////////////////##////////////////////##////////////////////#
#100-109 - Great Eastern Crisis Warmup Events
#	100 - A Crisis in Rumelia (Initiator/TUR)
#	101 - A Crisis in Rumelia (Recruit Local Power)
#	102 - A Crisis in the East (Recruit Neutral/Hostile Great Powers)
#	103 - A Crisis in the East (Recruit Allied Countries)
#	104 - Great Britain Attempts Deconfliction
#	105 - France Attempts Deconfliction
#	106 - ##Greece Attempts Deconfliction
# 	107 - Bosnia Takes Up Arms!
#	108 - Bulgaria Takes Up Arms!
#	109 - Great Eastern Crisis Superevent

#110-119 - Great Eastern Crisis Events
#	110 - [TECH] Sets Variables and Starts Warmup Chain
#	111 - [TECH] Assigns Tags and Preps event_window Scopes
#	112 - [TECH] Creates GEC DP and Fires Crisis Starts
#	113 - [TECH] Crisis Start for TUR
#	114 - [TECH] Crisis Start for Initiator
#	115 - [TECH] Crisis Start for Attackers
#	116 - [TECH] Crisis Start for Defenders
#	117 - [TECH] Crisis Start for Uninvolved
#	118 - >>The Porte Triumphant
#	119 - >>The Treaty of San Stefano

#120-129 - Congress of Berlin Events
#	120 - The Congress of Berlin
#	121 - The Issue of Bulgaria
#	122 - The Issue of Bosnia
#	123 - The Issue of Montenegro
#	124 - The Issue of Serbia
#	125 - ##The Issue of the Principalities
#	126 - >>The Issue of the Caucasus
#	127 - OPEN
#	128 - >>The Greek Delegation
#	129 - >>The Treaty of Berlin

#130-139 - Congress of Berlin Support Events
#	130 - >>The Convention of Cyprus
#	131 - >>The Convention of Tunis
#	132 - ##The Convention of Constantinople
#	139 - [TECH] Cleans Up Global Crisis/Berlin Variables
#////////////////////##////////////////////##////////////////////#


##  TURK4  TURKISH HISTORICAL FLAVOR  Events 400-499  ##

#400-409 - Turkish Monument Events
#	400 - OPEN

#410-419 - Turkish Cultural Achievement Events
#	410 - OPEN

#420-429 - Turkish Industrialization Events
#	420 - OPEN


##  TURK8  BALKAN NATIONAL REVIVALS  Events 800-899  ##
# This section is being created to take pressure off of the event structure in BALKFM
# Events in this section are meant to feature future nations in their eyalet forms under full Ottoman control

#800-809 - Bulgarian Revival Events   #### IMPORT FROM BALKFM
#	550>>800 - The Bulgarian Millet
#	551>>801 - Insurgency in Niš
#	552>>802 - The Bulgarian Question
#	553>>803 - Tsarigradski Vestnik
#	554>>804 - The Bulgarian National Revival
#	555>>805 - Great Powers Support Bulgaria
#	556>>806 - ##The Bulgarian Legion
#	557>>807 - ##The Legion Strikes Again!
#	558>>808 - The Birth of the Bulgarian State
#	559>>809 - Securing our Sovereignty

#810-819 - Bulgarian Revival Support Events
#	810 - OPEN

#820-829 - Bosnian Revival Events
#	820 - OPEN

#830-839 - Bosnian Revival Support Events
#	830 - OPEN

#840-849 - Albanian Revival Events
#	840 - OPEN

#850-859 - Albanian Revival Support Events
#	850 - OPEN


##  TURK9  ARAB & ARMENIAN NATIONAL REVIVALS  Events 900-999  ##

#900-990 - Armenian Revival Events
#	900 - OPEN

#910-919 - Armenian Revival Support Events
#	910 - OPEN


########################################################################
##  #TURK0  THE LAST STRUGGLE OF THE OTTOMAN EMPIRE  Events  001-099  ##
########################################################################

#### SICK MAN MAINLINE EVENTS ####

turkfm.001 = { # The Sick Man of Europe
	type = country_event
	placement = root
	
	title = turkfm.001.t
	desc = turkfm.001.d
	flavor = turkfm.001.f
	
#	gui_window = event_window_struggle
	
	event_image = {
		video = "turkfm_intro"
	}
	
	icon = "gfx/interface/icons/event_icons/event_ottoman.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered from GLOBAL
	}
	
	immediate = {
		turkfm_calculate_tension_effect = yes
	}
	
	option = {
		name = turkfm.001.a
		default_option = yes
		show_as_tooltip = {
			add_modifier = modifier_turkfm_sick_man
			add_modifier = modifier_turkfm_decentralized_administration
			add_modifier = modifier_turkfm_separatist_tensions
			add_modifier = {
				name = modifier_turkfm_imperial_aspiriations
				months = normal_modifier_time
			}
		}
	}
	
}

turkfm.007 = { # The Empire Shattered
	type = country_event
	placement = root
	
	title = turkfm.007.t
	desc = turkfm.007.d
	flavor = turkfm.007.f
	
	event_image = {
		video = "unspecific_factory_closed"
	}
	
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by turkfm.008
	}
	
	
	immediate = {
		c:TUR = {
			save_scope_as = ottoman_scope
			ruler = {
				save_scope_as = ottoman_ruler_scope
			}
		}
		random_primary_culture = {
			save_scope_as = primary_culture_scope
		}
	}
	
	option = { # Rejoin the Empire
		name = turkfm.007.a
		default_option = yes
		c:TUR = {
			create_diplomatic_pact = {
				country = root
				type = tributary
			}
		}
		change_relations = {
			country = c:TUR
			value = 50
		}
		c:TUR = {
			set_secret_goal = {
				country = root
				secret_goal = befriend
			}
		}
		ai_chance = {
			base = 9
		}
	}
	
	option = { # Assert Your Destiny
		name = turkfm.007.b
		make_independent = yes
		add_loyalists = {
			culture = scope:primary_culture_scope
			value = large_radicals
		}
		add_modifier = {
			name = modifier_turkfm_sultanate_shattered
			months = long_modifier_time
		}
		create_incident = {
			country = c:TUR
			value = 10
		}
		c:TUR = {
			set_secret_goal = {
				country = root
				secret_goal = conquer
			}
		}
		ai_chance = {
			base = 1 # Shouldn't really happen; if we get an economic dependence trigger, this will be expanded on
		}
	}

}

turkfm.008 = { # The Dead Man of Europe
	type = country_event
	placement = root
	
	title = turkfm.008.t
	desc = turkfm.008.d
	flavor = turkfm.008.f
	
	event_image = {
		video = "unspecific_factory_closed"
	}
	
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_sick_man_main
	}

	immediate = {
	}
	
	option = {
		name = turkfm.008.a
		default_option = yes
		if = {
			limit = {				
				is_subject = no
				any_subject_or_below = {
					NOT = { any_overlord_or_above = { NOT = { ROOT = this } } }
					NOT = {
						is_country_type = unrecognized
					}
				}
			}
			every_subject_or_below = {
				limit = {
					NOT = { any_overlord_or_above = { NOT = { ROOT = this } } }
					OR = {
						NOT = {
							is_country_type = unrecognized
						}
						is_subject_type = subject_type_protectorate
						is_subject_type = subject_type_dominion
						is_subject_type = subject_type_puppet
					}
				}
				trigger_event = {
					id = turkfm.007 # The Empire Shattered
				}
			}
		}
		set_country_type = unrecognized
	}

}

turkfm.009 = { # The Healthy Man of Europe
	type = country_event
	placement = root
	
	title = turkfm.009.t
	desc = turkfm.009.d
	flavor = turkfm.009.f
	
	event_image = {
		video = "votp_monarch_holding_court"
	}
	
	icon = "gfx/interface/icons/event_icons/event_portrait.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_sick_man_main
	}

	immediate = {
	}
	
	option = {
		name = turkfm.009.a
		default_option = yes
	}
	
}


############################################################
##  #TURK1  THE REORDERING OF THE EMPIRE  Events 200-299  ##
############################################################

turkfm.100 = { # The Decaying Empire
	type = country_event
	placement = root
	
	title = turkfm.100.t
	desc = turkfm.100.d
	flavor = turkfm.100.f
	
	event_image = {
		video = "unspecific_factory_closed"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fez.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_sick_man_main
	}
	
	immediate = {
	}
	
	option = {
		name = turkfm.100.a
		default_option = yes
		
	}

}

turkfm.101 = { # The Reordering of the Empire
	type = country_event
	placement = root
	
	title = turkfm.101.t
	desc = turkfm.101.d
	flavor = turkfm.101.f
	
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fez.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_sick_man_main
	}
	
	immediate = {
	}
	
	option = {
		name = turkfm.101.a
		default_option = yes
		
	}

}


#########################################################
##  #TURK2  THE OTTOMAN MILLET SYSTEM  Events 100-199  ##
#########################################################

#### MILLET NARRATIVE EVENTS ####

turkfm.200 = { # The Millet System
	type = country_event
	placement = root
	
	title = turkfm.200.t
	desc = turkfm.200.d
	flavor = turkfm.200.f
	
	event_image = {
		video = "middleeast_middleclass_cafe"
	}
	
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_tanzimat_main
	}
	
	immediate = {
	}
	
	option = {
		name = turkfm.200.a
		default_option = yes
	}

}

turkfm.201 = { # The Rise of Nationalism
	type = country_event
	placement = root
	
	title = turkfm.200.t
	desc = turkfm.200.d
	flavor = turkfm.200.f
	
	event_image = {
		video = "europenorthamerica_political_extremism"
	}
	
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		NOT = {
			has_variable = turkfm_nationalism_wave_happened
		}
		any_country = {
			is_subject_of = root
			capital = {
				region = sr:region_balkans
				region = sr:region_danubia
			}
			has_technology_researched = nationalism
		}
	}
	
	immediate = {
		set_variable = turkfm_nationalism_wave_happened
		random_country = {
			limit =	{
				is_subject_of = root
				capital = {
					region = sr:region_balkans
					region = sr:region_danubia
				}
				has_technology_researched = nationalism
			}
			save_scope_as = turkfm_nationalism_scope
		}
	}
	
	option = {
		name = turkfm.200.a
		default_option = yes
		custom_tooltip = turkfm_nationalism_tension_tt
	}

}

turkfm.208 = { # Region Lost
	type = country_event
	placement = root
	
	title = turkfm.208.t
	desc = turkfm.208.d
	flavor = turkfm.208.f
	
	event_image = {
		video = "middleeast_battlefield_trenches"
	}
	
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		OR = {
			AND = {
				has_variable = turkfm_controls_balkans
				turkfm_controls_balkans_trigger = no
			}
			AND = {
				has_variable = turkfm_controls_anatolia
				turkfm_controls_anatolia_trigger = no
			}
			AND = {
				has_variable = turkfm_controls_arabia
				turkfm_controls_arabia_trigger = no
			}
			AND = {
				has_variable = turkfm_controls_nile
				turkfm_controls_nile_trigger = no
			}
			AND = {
				has_variable = turkfm_controls_danubia
				turkfm_controls_danubia_trigger = no
			}
			AND = {
				has_variable = turkfm_controls_caucasus
				turkfm_controls_caucasus_trigger = no
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				has_variable = turkfm_controls_balkans
				turkfm_controls_balkans_trigger = no
			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 1 # Balkans
			}
		}
		else_if = {
			limit = {
				has_variable = turkfm_controls_anatolia
				turkfm_controls_anatolia_trigger = no
			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 2 # Anatolia
			}
		}
		else_if = {
			limit = {
				has_variable = turkfm_controls_arabia
				turkfm_controls_arabia_trigger = no
			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 3 # Arabia
			}
		}
		else_if = {
			limit = {
				has_variable = turkfm_controls_nile
				turkfm_controls_nile_trigger = no
			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 4 # Nile
			}
		}
		else_if = {
			limit = {

			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 5 # Danubia
			}
		}
		else_if = {
			limit = {

			}
			set_variable = {
				name = turkfm_lost_region_var
				value = 6 # Caucasus
			}
		}
					
	}
	
	option = {
		name = turkfm.208.a
		default_option = yes
		if = {
			limit = {
				has_modifier = modifier_turkfm_secured_region
			}
			remove_modifier = modifier_turkfm_secured_region
		}
		hidden_effect = {	
			remove_modifier = modifier_turkfm_lost_region
		}
		add_modifier = {
			name = modifier_turkfm_lost_region
			months = normal_modifier_time
			is_decaying = yes
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 1
			}
			remove_variable = turkfm_controls_balkans
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 2
			}
			remove_variable = turkfm_controls_anatolia
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 3
			}
			remove_variable = turkfm_controls_arabia
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 4
			}
			remove_variable = turkfm_controls_nile
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 5
			}
			remove_variable = turkfm_controls_danubia
		}
		if = {
			limit = {
				var:turkfm_lost_region_var = 6
			}
			remove_variable = turkfm_controls_caucasus
		}
		remove_variable = turkfm_lost_region_var
	}

}

turkfm.209 = { # Region Secured
	type = country_event
	placement = root
	
	title = turkfm.209.t
	desc = turkfm.209.d
	flavor = turkfm.209.f
	
	event_image = {
		video = "unspecific_military_parade"
	}
	
	icon = "gfx/interface/icons/event_icons/event_military.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		OR = {
			AND = {
				NOT = {
					has_variable = turkfm_controls_balkans
				}
				turkfm_controls_balkans_trigger = yes
			}
			AND = {
				NOT = {
					has_variable = turkfm_controls_anatolia
				}
				turkfm_controls_anatolia_trigger = yes
			}
			AND = {
				NOT = {
					has_variable = turkfm_controls_arabia
				}
				turkfm_controls_arabia_trigger = yes
			}
			AND = {
				NOT = {
					has_variable = turkfm_controls_nile
				}
				turkfm_controls_nile_trigger = yes
			}
			AND = {
				NOT = {
					has_variable = turkfm_controls_danubia
				}
				turkfm_controls_danubia_trigger = yes
			}
			AND = {
				NOT = {
					has_variable = turkfm_controls_caucasus
				}
				turkfm_controls_caucasus_trigger = yes
			}
		}
	}
	
	immediate = {
		if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_balkans
				}
				turkfm_controls_balkans_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 1 # Balkans
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_anatolia
				}
				turkfm_controls_anatolia_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 2 # Anatolia
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_arabia
				}
				turkfm_controls_arabia_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 3 # Arabia
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_nile
				}
				turkfm_controls_nile_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 4 # Nile
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_danubia
				}
				turkfm_controls_danubia_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 5 # Danubia
			}
		}
		else_if = {
			limit = {
				NOT = {
					has_variable = turkfm_controls_caucasus
				}
				turkfm_controls_caucasus_trigger = yes
			}
			set_variable = {
				name = turkfm_gained_region_var
				value = 6 # Caucasus
			}
		}
	}
	
	option = {
		name = turkfm.209.a
		default_option = yes
		if = {
			limit = {
				has_modifier = modifier_turkfm_lost_region
			}
			remove_modifier = modifier_turkfm_lost_region
		}
		hidden_effect = {	
			remove_modifier = modifier_turkfm_secured_region
		}
		add_modifier = {
			name = modifier_turkfm_secured_region
			months = normal_modifier_time
			is_decaying = yes
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 1
			}
			set_variable = turkfm_controls_balkans
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 2
			}
			set_variable = turkfm_controls_anatolia
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 3
			}
			set_variable = turkfm_controls_arabia
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 4
			}
			set_variable = turkfm_controls_nile
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 5
			}
			set_variable = turkfm_controls_danubia
		}
		if = {
			limit = {
				var:turkfm_gained_region_var = 6
			}
			set_variable = turkfm_controls_caucasus
		}
		remove_variable = turkfm_gained_region_var
	}

}


#### MILLET NEUTRAL EVENTS ####

turkfm.210 = { # Extortionate Taxation in State
	type = country_event
	placement = scope:turkfm_tension_target_scope
	
	title = turkfm.210.t
	desc = turkfm.210.d
	flavor = turkfm.210.f
	
	event_image = {
		video = "europenorthamerica_russian_serfs"
	}
	
	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		NOR = {
			has_global_variable = turkfm_tension_event_cooldown_var
			any_state = {
				has_modifier = modifier_turkfm_overtaxed
				has_modifier = modifier_turkfm_tax_break_given
			}
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_in_balkans = yes
			}
			save_scope_as = turkfm_tension_target_scope
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
	}
	
	option = { # Maintain Taxation
		name = turkfm.210.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			add_modifier = {
				name = modifier_turkfm_overtaxed
				months = normal_modifier_time
			}
			turkfm_reduce_state_sol_effect = yes
		}
		turkfm_add_medium_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_overtaxed
			}
		}
	}
	
	option = { # Reduce Taxation
		name = turkfm.210.b
		add_modifier = {
			name = modifier_turkfm_tax_break_given
			months = normal_modifier_time
		}
		scope:turkfm_tension_target_scope = {
			add_radicals_in_state = {
				pop_type = aristocrats
				value = medium_radicals
			}
		}
		turkfm_add_medium_deescalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_tax_break
			}
		}
	}
	
}

turkfm.211 = { # Plague Outbreak in State
	type = country_event
	placement = scope:turkfm_tension_target_scope
	
	title = turkfm.211.t
	desc = turkfm.211.d
	flavor = turkfm.211.f
	
	event_image = {
		video = "unspecific_factory_closed"
	}
	
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		NOR = {
			has_global_variable = turkfm_tension_event_cooldown_var
			any_state = {
				has_modifier = modifier_turkfm_plague_outbreak
				has_modifier = modifier_turkfm_mitigated_plague
			}
		}
		institution_investment_level = {
			institution = institution_health_system
			value < 4
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_in_balkans = yes
			}
			save_scope_as = turkfm_tension_target_scope
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
	}
	
	option = { # Let Them Die
		name = turkfm.211.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			add_radicals_in_state = {
				strata = poor
				value = large_radicals
			}
			add_modifier = {
				name = modifier_turkfm_plague_outbreak
				months = normal_modifier_time
			}
		}
		turkfm_add_medium_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_plague
			}
		}
	}
	
	option = { # Implement Quarantine
		name = turkfm.211.b
		scope:turkfm_tension_target_scope = {
			add_loyalists_in_state = {
				value = medium_radicals
			}
			add_modifier = {
				name = modifier_turkfm_mitigated_plague
				months = short_modifier_time
			}
		}
		turkfm_add_small_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_quarantine
			}
		}
	}

}

turkfm.212 = { # Ecumenical Patriarch Demands Protections
	type = country_event
	placement = root
	
	title = turkfm.212.t
	desc = turkfm.212.d
	flavor = turkfm.212.f
	
	event_image = {
		video = "southamerica_christianity"
	}
	
	icon = "gfx/interface/icons/event_icons/event_orthodox.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		NOR = {
			has_variable = turkfm_firman_requested
			has_global_variable = turkfm_tension_event_cooldown_var
		}
		has_variable = eocfm_controls_constantinople
	}
	
	immediate = {
		s:STATE_EASTERN_THRACE = {
			random_scope_state = {
				save_scope_as = turkfm_tension_target_scope
			}
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
		set_variable = turkfm_firman_requested
	}
	
	option = { # Patriarch? More like Faketriarch!
		name = turkfm.212.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			add_radicals_in_state = {
				religion = rel:orthodox
				value = medium_radicals
			}
		}
		turkfm_add_small_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_faketriarch
			}
		}
	}
	
	option = { # Help a Beggar Out
		name = turkfm.212.b
		scope:turkfm_tension_target_scope = {
			add_loyalists_in_state = {
				religion = rel:orthodox
				value = medium_radicals
			}
			add_modifier = {
				name = modifier_turkfm_granted_religious_firman
				months = short_modifier_time
			}
		}
		turkfm_add_small_deescalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_firman
			}
		}
	}

}


#### MILLET UNREST EVENTS ####

turkfm.220 = { # OPEN
	orphan = yes
}


#### MILLET HOSTILITY EVENTS ####

turkfm.230 = { # Churches Burned in State
	type = country_event
	placement = scope:turkfm_tension_target_scope
	
	title = turkfm.230.t
	desc = turkfm.230.d
	flavor = turkfm.230.f
	
	event_image = {
		video = "unspecific_vandalized_storefront"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		global_var:turkfm_separatism_phase_var = 3 # Hostility
		NOR = {
			has_global_variable = turkfm_tension_event_cooldown_var
			any_state = {
				has_modifier = modifier_turkfm_churches_burned
			}
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_in_balkans = yes
			}
			save_scope_as = turkfm_tension_target_scope
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
	}
	
	option = { # They Can Deal With It
		name = turkfm.230.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			add_radicals_in_state = {
				religion = rel:orthodox
				value = medium_radicals
			}
			add_modifier = {
				name = modifier_turkfm_churches_burned
				months = normal_modifier_time
			}
		}
		turkfm_add_medium_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_burninator
			}
		}
	}
	
	option = { # Pay Them Back
		name = turkfm.230.b
		scope:turkfm_tension_target_scope = {
			add_loyalists_in_state = {
				religion = rel:orthodox
				value = small_radicals
			}
			add_modifier = {
				name = modifier_turkfm_churches_burned
				months = normal_modifier_time
			}
			add_modifier = {
				name = modifier_turkfm_rebuilding_churches
				months = normal_modifier_time
			}
			owner = {
				add_treasury = -20000
			}
		}
		turkfm_add_small_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_reparations
			}
		}
	}

}

turkfm.231 = { # Popular Speaker Lynched in State
	type = country_event
	placement = scope:turkfm_tension_target_scope
	
	title = turkfm.231.t
	desc = turkfm.231.d
	flavor = turkfm.231.f
	
	event_image = {
		video = "unspecific_vandalized_storefront"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		global_var:turkfm_separatism_phase_var = 3 # Hostility
		NOR = {
			has_global_variable = turkfm_tension_event_cooldown_var
			has_modifier = modifier_turkfm_protected_minorities
			any_state = {
				has_modifier = modifier_turkfm_minority_leader_killed
			}
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_in_balkans = yes
			}
			save_scope_as = turkfm_tension_target_scope
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
	}
	
	option = { # Let the Killers Go
		name = turkfm.231.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			turkfm_add_medium_radicals_effect = yes
			add_modifier = {
				name = modifier_turkfm_minority_leader_killed
				months = normal_modifier_time
			}
		}
		turkfm_add_medium_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_lynching
			}
		}
	}
	
	option = { # Bring Them to Justice
		name = turkfm.231.b
		add_modifier = {
			name = modifier_turkfm_protected_minorities
			months = normal_modifier_time
		}
		add_modifier = {
			name = modifier_turkfm_local_garrison_deployed
			months = normal_modifier_time
			is_decaying = yes
		}
		turkfm_add_medium_deescalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_arrests
			}
		}
	}

}

turkfm.232 = { # Brigandage in State
	type = country_event
	placement = scope:turkfm_tension_target_scope
	
	title = turkfm.232.t
	desc = turkfm.232.d
	flavor = turkfm.232.f
	
	event_image = {
		video = "unspecific_vandalized_storefront"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		global_var:turkfm_separatism_phase_var = 3 # Hostility
		NOT = {
			has_global_variable = turkfm_tension_event_cooldown_var
		}
		any_state = {
			NOR = {
				has_modifier = modifier_turkfm_brigandage
				has_modifier = modifier_turkfm_local_garrison_deployed
			}
		}
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				state_in_balkans = yes
				NOT = { has_modifier = modifier_turkfm_local_garrison_deployed }
			}
			save_scope_as = turkfm_tension_target_scope
		}
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
	}
	
	option = { # They'll be Fine
		name = turkfm.232.a
		default_option = yes
		scope:turkfm_tension_target_scope = {
			add_modifier = {
				name = modifier_turkfm_brigandage
				months = normal_modifier_time
			}
		}
		turkfm_add_medium_escalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_brigandage
			}
		}
	}
	
	option = { # Extend Assistance
		name = turkfm.232.b
		scope:turkfm_tension_target_scope = {
			add_modifier = {
				name = modifier_turkfm_local_garrison_deployed
				months = normal_modifier_time
			}
		}
		turkfm_add_medium_deescalation_effect = yes
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_patrols
			}
		}
	}

}


#### MILLET DECONFLICTION EVENTS ####

turkfm.240 = { # OPEN
	orphan = yes
}


#### MILLET CRISIS EVENTS ####

turkfm.250 = { # Riots in State
	type = country_event
	placement = root
	
	title = turkfm.250.t
	desc = turkfm.250.d
	flavor = turkfm.250.f
	
	event_image = {
		video = "europenorthamerica_springtime_of_nations"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		NOR = {
			has_global_variable = turkfm_riot_var
#			has_global_variable = turkfm_deconfliction_var
		}
#		global_var:turkfm_tension_var >= 500
		any_scope_state = {
			state_in_balkans = yes
			is_split_state = no
#			is_target_of_wargoal = no ##TODO Figure out how to screen riot states from foreign wargoals
			NOR = { # temporary exclusion
				state_region = s:STATE_SLOVENIA
				state_region = s:STATE_CROATIA
				state_region = s:STATE_SLAVONIA
				state_region = s:STATE_DALMATIA
				state_region = s:STATE_EASTERN_THRACE
			}
		}
	}
	
	immediate = {
		set_global_variable = {
			name = turkfm_tension_event_cooldown_var
			days = 720 # two year lockout
		}
		set_global_variable = turkfm_riot_var
		random_scope_state = {
			limit = {
				state_in_balkans = yes
				is_split_state = no
				NOR = {
					state_region = s:STATE_SLOVENIA
					state_region = s:STATE_CROATIA
					state_region = s:STATE_SLAVONIA
					state_region = s:STATE_DALMATIA
					state_region = s:STATE_EASTERN_THRACE
				}
			}
			save_scope_as = turkfm_riot_state_scope
			set_variable = turkfm_riot_state_var
		}
	}
	
	option = { # Drop the Hammer
		name = turkfm.250.a
		default_option = yes
		scope:turkfm_riot_state_scope = {
			turkfm_add_medium_radicals_effect = yes
		}
		custom_tooltip = {
			text = turkfm.250.a.tt
			hidden_effect = {
				random_list = {
					50 = {
						trigger_event = {
							id = turkfm.253 # Rebellion in State Suppressed
							days = 30
						}
					}
					40 = {
						trigger_event = {
							id = turkfm.251 # Violence in State Worsens
							days = 30
						}
					}
					10 = {
						trigger = {
							scope:turkfm_riot_state_scope = {
								NOT = { 
									has_modifier = modifier_turkfm_civilians_massacred 
								}
							}
						}
						trigger_event = {
							id = turkfm.252 # Massacre in State
							days = 30
						}
					}
				}
			}
		}
	}
	
	option = { # Let Them Be
		name = turkfm.250.b
		scope:turkfm_riot_state_scope = {
			add_modifier = {
				name = modifier_turkfm_ethnic_riots
				months = short_modifier_time
				is_decaying = yes
			}
			add_radicals_in_state = {
				culture = cu:turkish
				value = large_radicals
			}
		}
		custom_tooltip = {
			text = turkfm.250.b.tt
			hidden_effect = {
				random_list = {
					10 = {
						trigger_event = {
							id = turkfm.253 # Rebellion in State Suppressed
							days = 30
						}
					}
					90 = {
						trigger_event = {
							id = turkfm.251 # Violence in State Worsens
							days = 30
						}
					}
				}
			}
		}
	}

}

turkfm.251 = { # Violence in State Worsens
	type = country_event
	placement = root
	
	title = turkfm.251.t
	desc = turkfm.251.d
	flavor = turkfm.251.f
	
	event_image = {
		video = "votp_cops_march"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fire.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by turkfm Uprising Event Chain
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				has_variable = turkfm_riot_state_var
			}
			save_scope_as = turkfm_riot_state_scope
		}
	}
	
	option = { # Thrown Down Harder
		name = turkfm.251.a
		default_option = yes
		scope:turkfm_riot_state_scope = {
			add_modifier = {
				name = modifier_turkfm_harsh_suppression
				months = short_modifier_time
			}
		}
		custom_tooltip = {
			text = turkfm.251.a.tt
			hidden_effect = {
				random_list = {
					50 = {
						trigger = {
							scope:turkfm_riot_state_scope = {
								NOT = { 
									has_modifier = modifier_turkfm_civilians_massacred 
								}
							}
						}
						trigger_event = {
							id = turkfm.252 # Massacre in State
							days = 30
						}
					}
					50 = {
						trigger_event = {
							id = turkfm.253 # Rebellion in State Suppressed
							days = 30
						}
					}
					50 = {
						trigger = {
							scope:turkfm_riot_state_scope = {
								has_modifier = modifier_turkfm_civilians_massacred
							}
						}
						trigger_event = {
							id = turkfm.254 # Creates Revolt Tag
							days = 30
						}
					}
				}
			}
		}
	}
	
	option = { # Keep Pulling Punches
		name = turkfm.251.b
		add_modifier = {
			name = modifier_turkfm_impotent_authority
			months = normal_modifier_time
		}
		custom_tooltip = {
			text = turkfm.251.b.tt
			hidden_effect = {
				random_list = {
					50 = {
						trigger_event = {
							id = turkfm.253 # Rebellion in State Suppressed
							days = 30
						}
					}
					50 = {
						trigger_event = {
							id = turkfm.254 # Creates Revolt Tag
							days = 30
						}
					}
				}
			}
		}
	}
	
}

turkfm.252 = { # Massacre in State
	type = country_event
	placement = root
	
	title = turkfm.252.t
	desc = turkfm.252.d
	flavor = turkfm.252.f
	
	event_image = {
		video = "southamerica_war_civilians"
	}
	
	icon = "gfx/interface/icons/event_icons/event_skull.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by turkfm Uprising Event Chain
	}	
	
	immediate = {
		random_scope_state = {
			limit = {
				has_variable = turkfm_riot_state_var
			}
			save_scope_as = turkfm_riot_state_scope
		}
	}
	
	option = {
		name = turkfm.252.a
		default_option = yes
		scope:turkfm_riot_state_scope = {
			turkfm_massacre_effect = yes
			turkfm_add_large_radicals_effect = yes
			turkfm_reduce_state_sol_effect = yes
		}
		hidden_effect = {
			random_list = {
				50 = {
					trigger_event = {
						id = turkfm.253 # Rebellion in State Suppressed
						days = 30
					}
				}
				50 ={
					trigger_event = {
						id = turkfm.254 # Creates Revolter Tag
						days = 30
					}
				}
			}
		}
	}
	
}

turkfm.253 = { # State Rebellion Suppressed
	type = country_event
	placement = root
	
	title = turkfm.253.t
	desc = turkfm.253.d
	flavor = turkfm.253.f
	
	event_image = {
		video = "votp_prison"
	}
	
	icon = "gfx/interface/icons/event_icons/event_military.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by turkfm Uprising Event Chain
	}
	
	immediate = {
		random_scope_state = {
			limit = {
				has_variable = turkfm_riot_state_var
			}
			save_scope_as = turkfm_riot_state_scope
		}
	}
	
	option = {
		name = turkfm.253.a
		default_option = yes
		scope:turkfm_riot_state_scope = {
			add_modifier = {
				name = modifier_turkfm_separatism_suppressed
				months = long_modifier_time
				is_decaying = yes
			}
			remove_variable = turkfm_riot_state_var
		}
		turkfm_add_very_large_deescalation_effect = yes
		every_country = {
			limit = {
				has_journal_entry = je_turkfm_eastern_question
			}
			post_notification = notification_turkfm_riot_suppressed
		}
		remove_global_variable = turkfm_riot_var
	}

}

turkfm.254 = { # Creates a Revolter Tag
	type = country_event
	placement = root
	hidden = yes
	
	trigger = {
		# triggered by turkfm Uprising Event Chain
	}

	immediate = {
		random_scope_state = {
			limit = {
				has_variable = turkfm_riot_state_var
			}
			save_scope_as = turkfm_riot_state_scope
		}
		turkfm_create_rebellion_effect = yes
	}
	
}

turkfm.255 = { # Balkan Country Rebellion
	type = country_event
	placement = scope:turkfm_rebellion_scope
	
	title = turkfm.255.t
	desc = turkfm.255.d
	flavor = turkfm.255.f
	
	event_image = {
		video = "votp_agitator_speaking"
	}
	
	icon = "gfx/interface/icons/event_icons/waving_flag.dds"
	
	on_opened_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by turkfm Uprising Event Chain
	}
	
	immediate = {
		random_country = {
			limit = {
				has_variable = turkfm_rebellion_tag_tracker
			}
			save_scope_as = turkfm_rebellion_scope
		}
	}
	
	option = { # Assert Our Dominion
		name = turkfm.255.a
		default_option = yes
		scope:turkfm_rebellion_scope = {
			make_independent = yes
		}
		create_diplomatic_play = {
			name = turkfm_balkan_rebellion
			target_country = scope:turkfm_rebellion_scope
			type = dp_secession
		}
		hidden_effect = {
			random_diplomatic_play = {
				limit = {
					c:TUR = {
						is_diplomatic_play_initiator = yes
					}
					scope:turkfm_rebellion_scope = {
						is_diplomatic_play_target = yes
					}
				}
				add_diplomatic_play_war_support = { target = scope:turkfm_rebellion_scope value = 100 }
			}
		}
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_deconfliction
			}
		}
	}
	
	option = { # Let Them Go
		name = turkfm.255.b
		create_diplomatic_pact = {
			country = scope:turkfm_rebellion_scope
			type = protectorate
		}
		create_bidirectional_truce = {
			country = scope:turkfm_rebellion_scope
			months = 60
		}
		add_radicals = {
			culture = cu:turkish
			value = medium_radicals
		}
		add_modifier = {
			name = modifier_turkfm_caved_to_separatists
			months = normal_modifier_time
		}
		hidden_effect = {
			every_country = {
				limit = {
					has_journal_entry = je_turkfm_eastern_question
				}
				post_notification = notification_turkfm_deconfliction
			}
		}
	}
	
	after = {
		scope:turkfm_rebellion_scope = {
			remove_variable = turkfm_rebellion_tag_tracker
		}
		remove_global_variable = turkfm_riot_var
	}

}


#### GREAT EASTERN CRISIS EVENTS ####

turkfm.260 = { # [TECH] Sets Variables and Starts Warmup Chain
	orphan = yes
}


#### CONGRESS OF BERLIN EVENTS ####

turkfm.270 = { # [TECH] Sets Variables and Starts Warmup Chain
	orphan = yes
}


######################################################
##  TURK3  EASTERN QUESTION EVENTS  Events 300-399  ##
######################################################

turkfm.300 = { # The Eastern Question
	type = country_event
	placement = root
	
	title = turkfm.300.t
	desc = turkfm.300.d
	flavor = turkfm.300.f
	
	gui_window = event_window_struggle
	
	event_image = {
		video = "dlc_grefm"
	}
	
	icon = "gfx/interface/icons/event_icons/event_fez.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	dlc = dlc_grefm
	
	trigger = {
		# triggered by je_turkfm_eastern_question
	}
	
	immediate = {
	}
	
	option = {
		name = turkfm.300.a
		default_option = yes
		
	}

}

########################################################
##  TURK4  TURKISH HISTORICAL FLAVOR  Events 400-499  ##
########################################################

# //OPEN

