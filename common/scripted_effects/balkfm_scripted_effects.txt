## GENERAL EFFECTS ##

balkfm_initialize_construction_effect = {
	set_variable = {
		name = balkfm_construction_var
		value = 0
	}
	set_variable = {
		name = balkfm_construction_points_var
		value = 0
	}
	set_variable = {
		name = balkfm_construction_progress_var
		value = 0
	}
}

balkfm_calculate_construction_effect = {
	set_variable = {
		name = balkfm_construction_points_var
		value = balkfm_construction_points_value
	}
	set_variable = {
		name = balkfm_construction_progress_var
		value = balkfm_construction_progress_value
	}
}

balkfm_push_construction_effect = {
	change_variable = {
		name = balkfm_construction_var
		add = var:balkfm_construction_progress_var
	}
}

balkfm_clean_up_construction_effect = {
	hidden_effect = {
		remove_variable = balkfm_construction_points_var
		remove_variable = balkfm_construction_progress_var
		remove_modifier = modifier_balkfm_construction_1
		remove_modifier = modifier_balkfm_construction_2
		remove_modifier = modifier_balkfm_construction_3
	}
}

##YUGOSLAVIA EFFECTS ##
balkfm_determine_yugoslav_leader = {
	if = {
		limit = {
			has_variable = balkfm_yugoslav_leader_var
		}
		remove_variable = balkfm_yugoslav_leader_var
	}
	ordered_country = {
		limit = {
			OR = {
				has_journal_entry = je_balkfm_nacertanije
				has_journal_entry = je_balkfm_nacertanije_alternate
			}
		}
		order_by = prestige
		max = 1
		check_range_bounds = no
		set_variable = balkfm_yugoslav_leader_var
	}
}

balkfm_update_yugoslav_leader_scope = {
	random_country = {
		limit = {
			has_variable = balkfm_yugoslav_leader_var
		}
		save_scope_as = yugoslav_leader_scope
	}
}

balkfm_rile_up_yugoslavs = {
	if = {
		limit = {
			any_scope_pop = {
				has_pop_culture = serb
			}
		}
		add_radicals_in_state = {
			culture = cu:serb
			value = large_radicals
		}
	}
	if = {
		limit = {
			any_scope_pop = {
				has_pop_culture = croat
			}
		}
		add_radicals_in_state = {
			culture = cu:croat
			value = large_radicals
		}
	}
	if = {
		limit = {
			any_scope_pop = {
				has_pop_culture = bosniak
			}
		}
		add_radicals_in_state = {
			culture = cu:bosniak
			value = large_radicals
		}
	}
	if = {
		limit = {
			any_scope_pop = {
				has_pop_culture = slovene
			}
		}
		add_radicals_in_state = {
			culture = cu:slovene
			value = large_radicals
		}
	}
	if = {
		limit = {
			any_scope_pop = {
				has_pop_culture = bulgarian
			}
		}
		add_radicals_in_state = {
			culture = cu:bulgarian
			value = large_radicals
		}
	}
}

balkfm_sad_yugoslavs = {
	add_radicals = {
		culture = cu:serb
		value = large_radicals
	}
	add_radicals = {
		culture = cu:croat
		value = large_radicals
	}
	add_radicals = {
		culture = cu:bosniak
		value = large_radicals
	}	
	add_radicals = {
		culture = cu:slovene
		value = large_radicals
	}
	add_radicals = {
		culture = cu:bulgarian
		value = large_radicals
	}	
}

balkfm_happy_yugoslavs = {
	add_loyalists = {
		culture = cu:serb
		value = large_radicals
	}
	add_loyalists = {
		culture = cu:croat
		value = large_radicals
	}
	add_loyalists = {
		culture = cu:bosniak
		value = large_radicals
	}	
	add_loyalists = {
		culture = cu:slovene
		value = large_radicals
	}
	add_loyalists = {
		culture = cu:bulgarian
		value = large_radicals
	}	
}

## MONTENEGRO EFFECTS ##
balkfm_set_up_montenegro = {
	ig:ig_landowners = {
		leader = {
			set_ideology = ideology:ideology_royalist
		}
	}
	ig:ig_armed_forces = {
		leader = {
			set_ideology = ideology:ideology_jingoist
		}
	}
	ig:ig_devout = {
		leader = {
			set_ideology = ideology:ideology_traditionalist
		}
	}
	ig:ig_intelligentsia = {
		leader = {
			set_ideology = ideology:ideology_land_reformer
		}
	}
	ig:ig_rural_folk = {
		leader = {
			set_ideology = ideology:ideology_traditionalist
		}
	}
}

balkfm_create_ali_pasha_characters = {
	create_character = {
		# Ali Pasha Rizvanbegović, vizier of the Herzegovina Eyalet from 1833 to 1851
		first_name = Ali
		last_name = Rizvanbegovic
		historical = yes
		age = 53 # born 1783
		dna = mr_bos_rizvanbegovic_ali_pasha
		culture = cu:serb
		religion = rel:sunni
		interest_group = ig_landowners
		ideology = ideology_moderate
		traits = {
			pious
			arrogant
		}
		on_created = {
			set_variable = balkfm_is_ali_pasha
			place_character_in_void = 500
		}
	}
	create_character = {
		# Osman Pasha Skopljak, vizier of the Scutari Eyalet
		first_name = Osman
		last_name = Skopljak
		historical = yes
		age = 30 # no English source found documenting age
		culture = cu:serb
		religion = rel:sunni
		interest_group = ig_landowners
		ideology = ideology_moderate
		traits = {
			pious
			arrogant
		}
		on_created = {
			set_variable = balkfm_is_osman_skopljak
			place_character_in_void = 500
		}
	}
	create_character = {
		# Smaïl-aga Čengić, Ottoman lord in Bosnia, killed on the orders of the Bishop
		first_name = Smail
		last_name = Cengic
		historical = yes
		age = 56 # born 1780
		culture = cu:serb
		religion = rel:sunni
		interest_group = ig_landowners
		ideology = ideology_moderate
		traits = {
			arrogant
			war_criminal
		}
		on_created = {
			set_variable = balkfm_is_smail_aga
			place_character_in_void = 500
		}
	}
	create_character = {
		# Ömer Pasha Lütfi, military commander in Bosnia 1850-1852, executed Ali Pasha in 1850.
		first_name = Omer
		last_name = Latas
		historical = yes
		age = 30 # born 1806
		dna = mr_tur_lufti_omer_pasha
		culture = cu:serb
		religion = rel:orthodox
		interest_group = ig_armed_forces
		ideology = ideology_moderate
		traits = {
			arrogant
		}
		on_created = {
			set_variable = balkfm_is_omar_pasha
			place_character_in_void = 500
		}
	}
}

balkfm_save_ali_pasha_scopes = {
	random_character_in_void = {
		limit = {
			has_variable = balkfm_is_ali_pasha
		}
		save_scope_as = ali_pasha_scope
	}
	random_character_in_void = {
		limit = {
			has_variable = balkfm_is_osman_skopljak
		}
		save_scope_as = osman_skopljak_scope
	}
	random_character_in_void = {
		limit = {
			has_variable = balkfm_is_smail_aga
		}
		save_scope_as = smail_aga_scope
	}
	random_character_in_void = {
		limit = {
			has_variable = balkfm_is_omar_pasha
		}
		save_scope_as = omar_pasha_scope
	}
}

## SERBIA EFFECTS ##
balkfm_set_monarchism_variables = {
	set_variable = {
		name = obrenovic_support_var
		value = 0
	}
	set_variable = {
		name = karadordevic_support_var
		value = 0
	}
	set_variable = {
		name = obrenovic_power_var
		value = 0
	}
	set_variable = {
		name = obrenovic_bureacracy_var
		value = 0
	}
	set_variable = {
		name = obrenovic_security_var
		value = 0
	}
	set_variable = {
		name = obrenovic_land_var
		value = 0
	}
	set_variable = {
		name = obrenovic_austria_var
		value = 0
	}
	set_variable = {
		name = obrenovic_progress_var
		value = 0
	}
	set_variable = {
		name = karadordevic_power_var
		value = 0
	}
	set_variable = {
		name = karadordevic_bureaucracy_var
		value = 0
	}
	set_variable = {
		name = karadordevic_security_var
		value = 0
	}
	set_variable = {
		name = karadordevic_land_var
		value = 0
	}
	set_variable = {
		name = karadordevic_russia_var
		value = 0
	}
	set_variable = {
		name = karadordevic_conquest_var
		value = 0
	}
	set_variable = {
		name = karadordevic_progress_var
		value = 0
	}	
	set_variable = {
		name = ser_leading_dynasty_var
		value = 0
	}
	set_variable = obrenovic_crowned_var
	set_variable = balkfm_russia_consul_var
}

	
balkfm_calculate_dynasty_support = {
	set_variable = {
		name = obrenovic_power_var
		value = obrenovic_power_value
	}
	set_variable = {
		name = obrenovic_bureacracy_var
		value = obrenovic_bureacracy_value
	}
	set_variable = {
		name = obrenovic_security_var
		value = obrenovic_security_value
	}
	set_variable = {
		name = obrenovic_land_var
		value = obrenovic_land_value
	}
	set_variable = {
		name = obrenovic_austria_var
		value = obrenovic_austria_value
	}
	set_variable = {
		name = obrenovic_progress_var
		value = obrenovic_progress_value
	}
	
	set_variable = {
		name = karadordevic_power_var
		value = karadordevic_power_value
	}
	set_variable = {
		name = karadordevic_bureaucracy_var
		value = karadordevic_bureaucracy_value
	}
	set_variable = {
		name = karadordevic_security_var
		value = karadordevic_security_value
	}
	set_variable = {
		name = karadordevic_land_var
		value = karadordevic_land_value
	}
	set_variable = {
		name = karadordevic_russia_var
		value = karadordevic_russia_value
	}
	set_variable = {
		name = karadordevic_conquest_var
		value = karadordevic_conquest_value
	}
	set_variable = {
		name = karadordevic_progress_var
		value = karadordevic_progress_value
	}
}

balkfm_update_dynasty_variables = {
	change_variable = {
		name = obrenovic_support_var
		add = var:obrenovic_progress_var
	}
	clamp_variable = {
		name = obrenovic_support_var
		max = 500
		min = 0
	}
	change_variable = {
		name = karadordevic_support_var
		add = var:karadordevic_progress_var
	}
	clamp_variable = {
		name = karadordevic_support_var
		max = 500
		min = 0
	}
}


balkfm_define_leading_dynasty = {
	if = {
		limit = {
			has_variable = obrenovic_crowned_var
		}
		set_variable = {
			name = ser_leading_dynasty_var
			value = var:obrenovic_support_var
		}
	}
	if = {
		limit = {
			has_variable = karadordevic_crowned_var
		}
		set_variable = {
			name = ser_leading_dynasty_var
			value = var:karadordevic_support_var
		}
	}
}

balkfm_karadordevic_takeover = {
	ruler = {
		save_scope_as = balkfm_obrenovic_scope
	}
	heir = {
		save_scope_as = balkfm_heir_scope
	}
	random_character_in_void = {
		limit = {
			has_variable = balkfm_karadordevic_tracker
		}
		save_scope_as = balkfm_karadordevic_scope
	}
	scope:balkfm_obrenovic_scope = {
		set_variable = balkfm_obrenovic_tracker
		place_character_in_void = 150 # characters will expire after 15 years
	}
	if = {
		limit = {
			exists = scope:balkfm_heir_scope
		}
		scope:balkfm_heir_scope = {
			kill_character = yes # get better parents next time bub
		}
	}
	if = {
		limit = {
			exists = scope:balkfm_karadordevic_scope
		}
		scope:balkfm_karadordevic_scope = {
			set_character_as_ruler = yes
		}
	}
	else = {
		create_character = {
			# dynamic Karađorđević
			last_name = Karadordevic
			historical = yes
			age = 30
			culture = cu:serb
			traits = {
				basic_political_operator
			}
			on_created = {
				set_variable = balkfm_karadordevic_tracker
			}
		}
	}
	remove_variable = obrenovic_crowned_var
	set_variable = karadordevic_crowned_var
	trigger_event = {
		id = balkfm.410 # House Karađorđević Takes the Throne
	}
}
	
balkfm_obrenovic_takeover = {
	ruler = {
		save_scope_as = balkfm_karadordevic_scope
	}
	heir = {
		save_scope_as = balkfm_heir_scope
	}
	random_character_in_void = {
		limit = {
			has_variable = balkfm_obrenovic_tracker
		}
		save_scope_as = balkfm_obrenovic_scope
	}
	scope:balkfm_karadordevic_scope = {
		set_variable = balkfm_karadordevic_tracker
		place_character_in_void = 150 # characters will expire after 15 years
	}	
	if = {
		limit = {
			exists = scope:balkfm_heir_scope
		}
		scope:balkfm_heir_scope = {
			kill_character = yes # get better parents next time bub
		}
	}
	if = {
		limit = {
			exists = scope:balkfm_obrenovic_scope
		}
		scope:balkfm_obrenovic_scope = {
			set_character_as_ruler = yes
		}
	}
	else = {
		create_character = {
			# dynamic Obrenović
			last_name = "Obrenovic"
			historical = yes
			age = 30
			culture = cu:serb
			traits = {
				basic_political_operator
			}
			on_created = {
				set_variable = balkfm_obrenovic_tracker
			}
		}
	}
	remove_variable = balkfm_kaykay_var
	remove_variable = karadordevic_crowned_var
	set_variable = obrenovic_crowned_var
	trigger_event = {
		id = balkfm.411 # House Obrenović Takes the Throne
	}
}

balkfm_clean_up_ser_monarchism = { # these are all unnessecary once JE is closed
	remove_variable = obrenovic_support_var
	remove_variable = karadordevic_support_var
	remove_variable = obrenovic_progress_var
	remove_variable = karadordevic_progress_var
	remove_variable = ser_leading_dynasty_var
	remove_variable = karadordevic_crowned_var
	remove_variable = obrenovic_crowned_var
}

## BULGARIA EFFECTS ##
balkfm_create_bulgaria = { # creates BUL, used for the Great Eastern Crisis
	if = {
		limit = {
			owns_entire_state_region = STATE_BULGARIA
		}
		create_country = {
			tag = BUL
			origin = this
			state = s:STATE_BULGARIA.region_state:TUR
			on_created = {
			}
		}
	}
	if = {
		limit = {
			exists = c:BUL
			owns_entire_state_region = STATE_NORTHERN_THRACE
		}
		s:STATE_NORTHERN_THRACE = {
			every_scope_state = {
				limit = {
					owner = {
						c:TUR = this
					}
				}
				set_state_owner = c:BUL
			}
		}
	}
	c:BUL = {
		balkfm_set_bulgarian_laws = yes
	}
}

balkfm_create_bulgaria_test = { # creates BUL, followed by ERUM. Used for testing purposes in balkfm.005.
	create_country = {
		tag = BUL
		origin = this
		state = s:STATE_BULGARIA.region_state:TUR
		on_created = {
		}
	}
	if = {
		limit = {
			c:TUR = {
				owns_entire_state_region = STATE_NORTHERN_THRACE
			}
		}
		create_country = {
			tag = ERUM
			origin = this
			state = s:STATE_NORTHERN_THRACE.region_state:TUR
			on_created = {
			}
		}
	}
	c:TUR = {
		create_diplomatic_pact = {
			country = c:BUL
			type = protectorate
		}
		if  = {
			limit = {
				exists = c:ERUM
			}
			create_diplomatic_pact = {
				country = c:ERUM
				type = puppet
			}
		}
	}
	c:BUL = {
		balkfm_set_bulgarian_laws = yes
		balkfm_create_bulgarian_characters = yes
		trigger_event = {
			id = balkfm.500 # The Golden Lion Awakens
			days = 1 # or else the loc breaks
		}
	}
}

balkfm_set_bulgarian_laws = {
	activate_law = law_type:law_monarchy
	activate_law = law_type:law_universal_suffrage
	activate_law = law_type:law_cultural_exclusion
	activate_law = law_type:law_state_religion
	activate_law = law_type:law_appointed_bureaucrats
	activate_law = law_type:law_professional_army
	activate_law = law_type:law_traditionalism
	activate_law = law_type:law_mercantilism
	activate_law = law_type:law_tenant_farmers
	activate_law = law_type:law_no_police
	activate_law = law_type:law_right_of_assembly
	activate_law = law_type:law_slavery_banned
}

balkfm_set_up_rumelia = {
	create_character = {
		template = template_balkfm_bogoridi_alexander
		ruler = yes
	}
	create_character = {
		template = template_balkfm_stranski_georgi
	}
	activate_law = law_type:law_monarchy
	activate_law = law_type:law_landed_voting
	activate_law = law_type:law_cultural_exclusion
	activate_law = law_type:law_state_religion
	activate_law = law_type:law_appointed_bureaucrats
	activate_law = law_type:law_professional_army
	activate_law = law_type:law_tenant_farmers
	activate_law = law_type:law_mercantilism
	activate_law = law_type:law_tenant_farmers
	activate_law = law_type:law_no_police
	activate_law = law_type:law_right_of_assembly
	activate_law = law_type:law_slavery_banned
}

balkfm_create_bulgarian_characters = {
	heir ?= {
		kill_character = yes # just some housekeeping
	}
	create_character = {
		template = template_balkfm_battenburg_alexander
		ruler = yes
	}
	create_character = {
		template = template_balkfm_turnovski_kliment
	}
	create_character = {
		template = template_balkfm_tsankov_dragan
	}
	create_character = {
		template = template_balkfm_kesyakov_konstantin
	}
	create_character = {
		template = template_balkfm_sakazov_yanko
	}
}

balkfm_create_bulgarian_regency_characters = {
	create_character = {
		template = template_balkfm_mutkurov_sava
	}
	create_character = {
		template = template_balkfm_karavelov_petko
	}
	create_character = {
		template = template_balkfm_stambolov_stefan
	}	
	create_character = {
		template = 	template_balkfm_georgiev_evlogi
	}
}

balkfm_create_bulgarian_royals = {
	create_character = {
		template = template_balkfm_sakskoburggotski_ferdinand
		on_created = {
			place_character_in_void = 12
		}
	}
	create_character = {
		template = template_balkfm_dadiani_nikoloz
		on_created = {
			place_character_in_void = 12
		}
	}
	if = {
		limit = {
			c:ERUM ?= {
				ruler = {
					NOT = {
						has_template = template_balkfm_bogoridi_alexander
					}
				}
			}
		}
		create_character = {
			template = template_balkfm_bogoridi_alexander
			on_created = {
				place_character_in_void = 12
			}
		}
	}
	create_character = {
		template = template_balkfm_glucksburg_valdemar
		on_created = {
			place_character_in_void = 12
		}
	}
	create_character = {
		template = template_balkfm_goltz_wilhelm
		on_created = {
			place_character_in_void = 12
		}
	}
}

balkfm_remove_stambolovism_variables_effect = {
	remove_variable = balkfm_stambolovism_var
	remove_variable = balkfm_battenburg_letter
	remove_variable = balkfm_military_modernized
	remove_variable = balkfm_executed_panitsa
	remove_variable = balkfm_showed_off_regalia
	
	remove_variable = balkfm_exiled_panitsa
	remove_variable = balkfm_put_away_regalia
}

balkfm_rumelian_ruler_rotation_effect = {
	if = {
		limit = {
			var:balkfm_governor_counter <= 1
		}
		create_character = {
			template = template_balkfm_bogoridi_alexander
			on_created = {
				place_character_in_void = 12
				set_variable = balkfm_rumelian_ruler_var
			}
		}
	}
	else = {
		create_character = {
			ig_leader = yes
			interest_group = ig_landowners
			ideology = ideology_royalist
			traits = {
				reserved # idk man, this is a dynamic character
			}
			on_created = {
				place_character_in_void = 12
				set_variable = balkfm_rumelian_ruler_var
			}
		}
	}
	change_variable = {
		name = balkfm_governor_counter
		add = 1
	}
}

balkfm_play_silistra_effect = {
	# This event is used to provide a route for Bulgarian gameplay from game start. The SILI tag is defined in turkfm since it's an Eyalet tag. If this tag is called in Turkfm content it will not use these creation and setup effects.
	create_country = {
		tag = SILI
		origin = c:TUR
		state = s:STATE_BULGARIA.region_state:TUR
		on_created = {
			balkfm_set_up_silistra_effect = yes
		}
	}
	play_as = c:SILI
}

balkfm_set_up_silistra_effect = {
#	create_character = {
#		template = 
#	}
	create_character = {
		template = template_balkfm_miladinov_dimitar
	}
	set_variable = {
		name = balkfm_nationalism_var
		value = 0
	}
	trigger_event = {
		id = balkfm.550 # The Bulgarian Millet
	}
	add_journal_entry = {
		type = je_balkfm_bul_silistra
	}
	c:TUR  = {
		create_diplomatic_pact = {
			country = c:SILI
			type = vassal
		}
		set_secret_goal = {
			secret_goal = protect
			country = c:SILI
		}
	}
}

balkfm_become_bulgaria_effect = {
	if = {
		limit = {
			NOT = {
				c:BUL ?= this
			}
		}
		change_tag = BUL
	}
	trigger_event = {
		id = balkfm.500 # The Golden Lion Awakens
		days = 1 # or else the loc breaks
	}
	hidden_effect = {
		heir ?= {
			kill_character = yes # just some housekeeping
		}
		create_character = {
			template = template_balkfm_turnovski_kliment
		}
		create_character = {
			template = template_balkfm_tsankov_dragan
		}
		create_character = {
			template = template_balkfm_kesyakov_konstantin
		}
		create_character = {
			template = template_balkfm_sakazov_yanko
		}
	}
}

balkfm_clean_up_silistra_variables_effect = {
	remove_variable = balkfm_nis_insurgency_happened
	remove_variable = balkfm_bulgarian_question_happened
	remove_variable = balkfm_constantinople_newspaper_published
	remove_variable = balkfm_golden_lion_tickled
	remove_variable = balkfm_legion_formed
}

## ROMANIA EFFECTS ##

balkfm_moldavian_election_effect = {
	if = { # First Election
		limit = {
			var:balkfm_hospodar_election_counter <= 1
		}
		if = {
			limit = {
				ruler = {
					has_variable = balkfm_is_kogalniceanu
				}
			}
			create_character = {
				# Costache Negri, Moldavian writer and revolutionary
				first_name = Costache
				last_name = Negri
				culture = cu:romanian
				religion = rel:orthodox
				historical = yes
				age = 45
				ideology = ideology_reformer
				interest_group = ig_intelligentsia
				on_created = {
					set_variable = balkfm_hospodar_m1
					place_character_in_void = 720
				}
			}
		}
		else = {
			create_character = { 
				# Mihail Kogălniceanu, Romanian nationalist; leader in the 1848 revolution
				first_name = Mihail
				last_name = Kogalniceanu
				culture = cu:romanian
				religion = rel:orthodox
				historical = yes
				age = 45
				ideology = ideology_kogalnitchanism
				interest_group = ig_intelligentsia
				on_created = {
					set_variable = balkfm_is_kogalniceanu
					set_variable = balkfm_hospodar_m1
					place_character_in_void = 720
				}
			}
		}
		create_character = { 
			# Ion Ghica, Romanian statesman and scholar; participated in the 1848 Revolts
			first_name = Ion
			last_name = Ghica
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 45
			ideology = ideology_kogalnitchanism
			interest_group = ig_intelligentsia
			on_created = {
				set_variable = balkfm_hospodar_m2
				place_character_in_void = 720
			}
		}
	}
	
	if = { # Second Election
		limit = {
			var:balkfm_hospodar_election_counter = 2
		}
		create_character = { # Grigore Alexandru Ghica, Prince of Moldavia 1849-1853/1854-1856
			first_name = Grigore
			last_name = Ghica
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 40 # birth date unclear; was in his 40s when elected
			ideology = ideology_humanitarian_royalist
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_m1
				place_character_in_void = 720 # 60 year lease on life
			}
		}
		create_character = { # Manolache Costache Epureanu, 2x Prime Minister of Romania, participated in the ad hoc committee in Moldavia after the 1848 Revolution
			first_name = Manolache
			last_name = Epureanu
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 45
			ideology = ideology_traditionalist
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_m2
				place_character_in_void = 720 
			}
		}
	}
	
	if = { # Third Election
		limit = {
			var:balkfm_hospodar_election_counter = 3
		}	
		create_character = { # Alexandru Ioan Cuza, first Domnitor of the United Principalities
			first_name = Alexandru
			last_name = Cuza
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 41 # age when he was elected
			ideology = ideology_kogalnitchanism
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_m1
				place_character_in_void = 720 
			}
		}
		create_character = { # Lascăr Catargiu, prominent boyar conservative
			first_name = Lascar
			last_name = Catargiu
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 29 # if election is held in 1859
			ideology = ideology_royalist
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_m2
				place_character_in_void = 720 
			}
		}
	}
	
	if = { # Future Elections
		limit = {
			var:balkfm_hospodar_election_counter > 3
		}	
		create_character = {
			culture = cu:romanian
			religion = rel:orthodox
			age = 40
			ideology = ideology_kogalnitchanism
			interest_group = ig_intelligentsia
			on_created = {
				set_variable = balkfm_hospodar_m1
				place_character_in_void = 720 
			}
		}
		create_character = {
			culture = cu:romanian
			religion = rel:orthodox
			age = 40
			ideology = ideology_royalist
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_m2
				place_character_in_void = 720 
			}
		}
	}

}

balkfm_wallachian_election_effect = {
	## These effects generate two candidates based on the election counter
	if = { # First Election
		limit = {
			var:balkfm_hospodar_election_counter <= 1
		}
		create_character = { # Gheorghe Bibescu, second hospodar of Wallachia
			first_name = Gheorghe
			last_name = Bibescu
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 40
			ideology = ideology_reformer
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_w1
				place_character_in_void = 720 
			}
		}
		create_character = { # Emanoil Băleanu, candidate in the 1842 election
			first_name = Emanoil
			last_name = Baleanu
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 40
			ideology = ideology_social_democrat
			interest_group = ig_intelligentsia
			on_created = {
				set_variable = balkfm_hospodar_w2
				place_character_in_void = 720 
			}
		}
	}
	if = { # Second Election
		limit = {
			var:balkfm_hospodar_election_counter = 2
		}
		create_character = { # Barbu Dimitrie Știrbei, third hospodar of Wallachia
			first_name = Barbu
			last_name = Stirbei
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 40
			ideology = ideology_reformer
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_w1
				place_character_in_void = 720 
			}
		}
		create_character = { # Constantin Cantacuzino, boyar leader during the Regulamentul era
			first_name = Constantin
			last_name = Cantacuzino
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 60
			ideology = ideology_traditionalist
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_w2
				place_character_in_void = 720 
			}
		}
	}
	if = { # Third Election
		limit = {
			var:balkfm_hospodar_election_counter = 3
		}	
		create_character = {
			first_name = Alexander
			last_name = Cuza
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 41 # age when he was elected
			ideology = ideology_kogalnitchanism
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_w1
				place_character_in_void = 720 
			}
		}
		create_character = {
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 45
			interest_group = ig_intelligentsia
			on_created = {
				set_variable = balkfm_hospodar_w2
				place_character_in_void = 720 
			}
		}
	}
	if = { # Future Elections
		limit = {
			var:balkfm_hospodar_election_counter > 3
		}	
		create_character = {
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 45
			ideology = ideology_moderate
			interest_group = ig_intelligentsia
			on_created = {
				set_variable = balkfm_hospodar_w1
				place_character_in_void = 720 
			}
		}
		create_character = {
			culture = cu:romanian
			religion = rel:orthodox
			historical = yes
			age = 45
			ideology = ideology_moderate
			interest_group = ig_landowners
			on_created = {
				set_variable = balkfm_hospodar_w2
				place_character_in_void = 720 
			}
		}
	}

}

balkfm_set_up_1848_variables_effect = {
	set_variable = {
		name = balkfm_1848_rom_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_ruler_popularity_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_intelligentsia_approval_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_bourgeoisie_approval_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_landowners_approval_var
		value = 0
	}
	set_variable = {
		name = balkfm_1848_occupation_var
		value = 0
	}
}

balkfm_1848_variables_effect = {
	set_variable = {
		name = balkfm_1848_ruler_popularity_var
		value = balkfm_1848_ruler_popularity_value
	}
	set_variable = {
		name = balkfm_1848_intelligentsia_approval_var
		value = balkfm_1848_intelligentsia_approval_value
	}
	set_variable = {
		name = balkfm_1848_landowners_approval_var
		value = balkfm_1848_landowners_approval_value
	}
	set_variable = {
		name = balkfm_1848_bourgeoisie_approval_var
		value = balkfm_1848_bourgeoisie_approval_value
	}
	set_variable = {
		name = balkfm_1848_occupation_var
		value = balkfm_1848_occupation_value
	}
	set_variable = {
		name = balkfm_1848_progress_var
		value = balkfm_1848_progress_value
	}
}
	
balkfm_1848_progress_effect = {
	change_variable = {
		name = balkfm_1848_rom_var
		add = var:balkfm_1848_progress_var
	}
	clamp_variable = {
		name = balkfm_1848_rom_var
		max = 200
		min = 0
	}
}

balkfm_clean_up_1848_variables_effect = {
	remove_variable = balkfm_1848_rom_var
	remove_variable = balkfm_1848_progress_var
	remove_variable = balkfm_1848_ruler_popularity_var
	remove_variable = balkfm_1848_intelligentsia_approval_var
	remove_variable = balkfm_1848_landowners_approval_var
	remove_variable = balkfm_1848_bourgeoisie_approval_var
}

balkfm_initialize_dezvoltator_variables_effect = {
	# Little did you know this was actually a Variables Flavor Mod
	set_variable = {
		name = balkfm_dezvoltator_var
		value = 0
	}
	set_variable = {
		name = balkfm_dezvoltator_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_landowners_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_devout_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_armed_forces_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_intelligentsia_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_industrialists_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_bourgeoisie_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_rural_folk_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_trade_unions_support_var
		value = 0
	}
}

balkfm_update_dezvoltator_variables_effect = {
	set_variable = {
		name = balkfm_landowners_support_var
		value = balkfm_landowners_support_value
	}
	set_variable = {
		name = balkfm_devout_support_var
		value = balkfm_devout_support_value
	}
	set_variable = {
		name = balkfm_armed_forces_support_var
		value = balkfm_armed_forces_support_value
	}
	set_variable = {
		name = balkfm_intelligentsia_support_var
		value = balkfm_intelligentsia_support_value
	}
	set_variable = {
		name = balkfm_industrialists_support_var
		value = balkfm_industrialists_support_value
	}
	set_variable = {
		name = balkfm_bourgeoisie_support_var
		value = balkfm_bourgeoisie_support_value
	}
	set_variable = {
		name = balkfm_rural_folk_support_var
		value = balkfm_rural_folk_support_value
	}
	set_variable = {
		name = balkfm_trade_unions_support_var
		value = balkfm_trade_unions_support_value
	}
	set_variable = {
		name = balkfm_dezvoltator_progress_var
		value = balkfm_dezvoltator_progress_value
	}
}

balkfm_push_dezvoltator_progress_effect = {
	change_variable = {
		name = balkfm_dezvoltator_var
		add = var:balkfm_dezvoltator_progress_var
	}
	clamp_variable = {
		name = balkfm_dezvoltator_var
		max = 200
		min = 0
	}
}

balkfm_clean_up_dezvoltator_variables_effect = {
	remove_variable = balkfm_dezvoltator_var
	remove_variable = balkfm_dezvoltator_progress_var
	remove_variable = balkfm_landowners_support_var
	remove_variable = balkfm_devout_support_var
	remove_variable = balkfm_armed_forces_support_var
	remove_variable = balkfm_intelligentsia_support_var
	remove_variable = balkfm_industrialists_support_var
	remove_variable = balkfm_bourgeoisie_support_var
	remove_variable = balkfm_rural_folk_support_var
	remove_variable = balkfm_trade_unions_support_var
}

balkfm_find_kogalniceanu_effect = {
	# Please don't look too hard, I am NOT proud of this
	if = {
		limit = {
			NOR = {
				any_scope_character = {
					has_template = template_balkfm_kogalniceanu_mihail
				}
				any_character_in_void = {
					has_template = template_balkfm_kogalniceanu_mihail
				}
			}
		}
		create_character = { # Mihail Kogălniceanu, Romanian nationalist; leader in the 1848 revolution
			template = template_balkfm_kogalniceanu_mihail
			on_created = {
				set_variable = balkfm_is_revolutionary
				place_character_in_void = 100
			}
		}
	}
	random_character_in_void = {
		limit = {
			has_template = template_balkfm_kogalniceanu_mihail
		}
		save_scope_as = balkfm_kogalniceanu_scope
	}
	if = {
		limit = {
			NOT = {
				exists = scope:balkfm_kogalniceanu_scope
			}
		}
		random_scope_character = {
			limit = {
				has_template = template_balkfm_kogalniceanu_mihail
			}
			save_scope_as = balkfm_kogalniceanu_scope
		}
	}
}

balkfm_initialize_protochronism_effect = {
	# Infinite Variable Works Continues...
	set_variable = {
		name = balkfm_junimism_popularity_var
		value = 0
	}
	set_variable = {
		name = balkfm_junimism_landowners_var
		value = 0
	}
	set_variable = {
		name = balkfm_junimism_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_junimism_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_dacianism_popularity_var
		value = 0
	}
	set_variable = {
		name = balkfm_dacianism_intelligentsia_var
		value = 0
	}
	set_variable = {
		name = balkfm_dacianism_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_dacianism_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_protochronism_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_junimism_var
		value = 1 # this is so the push effect can actually do something
	}
	set_variable = {
		name = balkfm_dacianism_var
		value = 0
	}
}

balkfm_calculate_protochronism_effect = {
	set_variable = {
		name = balkfm_junimism_popularity_var
		value = balkfm_junimism_popularity_value
	}
	set_variable = {
		name = balkfm_junimism_landowners_var
		value = root.ig:ig_landowners.ig_clout
	}
	set_variable = {
		name = balkfm_junimism_support_var
		value = balkfm_junimism_support_value
	}
	set_variable = {
		name = balkfm_junimism_progress_var
		value = balkfm_junimism_progress_value
	}
	set_variable = {
		name = balkfm_dacianism_popularity_var
		value = balkfm_dacianism_popularity_value
	}
	set_variable = {
		name = balkfm_dacianism_intelligentsia_var
		value = root.ig:ig_intelligentsia.ig_clout
	}
	set_variable = {
		name = balkfm_dacianism_support_var
		value = balkfm_dacianism_support_value
	}
	set_variable = {
		name = balkfm_dacianism_progress_var
		value = balkfm_dacianism_progress_value
	}
	
	if = {
		limit = {
			var:balkfm_junimism_progress_var > var:balkfm_dacianism_progress_var
		}
		set_variable = {
			name = balkfm_protochronism_progress_var
			value = balkfm_junimism_lead_value
		}
	}
	if = {
		limit = {
			var:balkfm_junimism_progress_var < var:balkfm_dacianism_progress_var
		}
		set_variable = {
			name = balkfm_protochronism_progress_var
			value = balkfm_dacianism_lead_value
		}
	}
	if = {
		limit = {
			var:balkfm_junimism_progress_var = var:balkfm_dacianism_progress_var
		}
		set_variable = {
			name = balkfm_protochronism_progress_var
			value = 0
		}
	}
}

balkfm_push_protochronism_effect = {
	# These variables are intentionally tuned to aggressively swing support from one camp to another if either side has a negative progress variable
	
	if = {
		limit = {
			var:balkfm_junimism_progress_var > var:balkfm_dacianism_progress_var
		}
		change_variable = {
			name = balkfm_junimism_var
			add = var:balkfm_protochronism_progress_var
		}
		change_variable = {
			name = balkfm_dacianism_var
			subtract = var:balkfm_protochronism_progress_var
		}
	}
	if = {
		limit = {
			var:balkfm_junimism_progress_var < var:balkfm_dacianism_progress_var
		}
		change_variable = {
			name = balkfm_junimism_var
			subtract = var:balkfm_protochronism_progress_var
		}
		change_variable = {
			name = balkfm_dacianism_var
			add = var:balkfm_protochronism_progress_var
		}
	}
	clamp_variable = {
		name = balkfm_junimism_var
		max = 100
		min = 0
	}
	clamp_variable = {
		name = balkfm_dacianism_var
		max = 100
		min = 0
	}
}

balkfm_clean_up_protochronism_effect = {
	remove_variable = balkfm_junimism_popularity_var
	remove_variable = balkfm_junimism_landowners_var
	remove_variable = balkfm_junimism_support_var
	remove_variable = balkfm_junimism_progress_var
	remove_variable = balkfm_dacianism_popularity_var
	remove_variable = balkfm_dacianism_intelligentsia_var
	remove_variable = balkfm_dacianism_support_var
	remove_variable = balkfm_dacianism_progress_var
	remove_variable = balkfm_protochronism_progress_var
	remove_variable = balkfm_junimism_var
	remove_variable = balkfm_dacianism_var
}

balkfm_initialize_1866_variables_effect = {
	set_variable = {
		name = balkfm_1866_var
		value = 0
	}
	set_variable = {
		name = balkfm_1866_progress_var
		value = 0
	}
	set_variable = {
		name = balkfm_1866_ruler_var
		value = 0
	}
	set_variable = {
		name = balkfm_1866_support_var
		value = 0
	}
	set_variable = {
		name = balkfm_1866_radicals_var
		value = 0
	}
}

balkfm_calculate_1866_variables_effect = {
	set_variable = {
		name = balkfm_1866_ruler_var
		value = balkfm_1866_ruler_value
	}
	set_variable = {
		name = balkfm_1866_support_var
		value = balkfm_1866_support_value
	}
	set_variable = {
		name = balkfm_1866_radicals_var
		value = root.radical_fraction
	}
	set_variable = {
		name = balkfm_1866_progress_var
		value = balkfm_1866_progress_value
	}
}

balkfm_push_1866_variables_effect = {
	change_variable = {
		name = balkfm_1866_var
		add = var:balkfm_1866_progress_var
	}
	clamp_variable = {
		name = balkfm_1866_var
		max = 100
		min = 0
	}
}

balkfm_cleanup_1866_variables_effect = {

}

## TURK-SPLOSION EFFECTS ##
balkfm_balkanize_effect = {
	c:TUR ?= {
		if = {
			limit = {
				NOT = { exists = c:BOS }
				owns_entire_state_region = STATE_BOSNIA
			}
			create_country = {
				tag = BOS
				origin = this
				state = s:STATE_BOSNIA.region_state:TUR
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:MON }
					owns_entire_state_region = STATE_MONTENEGRO
				}
			}
			create_country = {
				tag = MON
				origin = this
				state = s:STATE_MONTENEGRO.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					c:MON ?= {
						NOT = {
							owns_entire_state_region = STATE_MONTENEGRO
						}
					}
				}
			}
			s:STATE_MONTENEGRO = {
				every_scope_state = {
					limit = {
						owner = {
							c:TUR = this
						}
					}
					set_state_owner = c:MON
				}
			}
		}
		if = {
			limit = {
				NOT = { exists = c:ALB }
				owns_entire_state_region = STATE_ALBANIA
			}
			create_country = {
				tag = ALB
				origin = this
				state = s:STATE_ALBANIA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:NMAC }
				owns_entire_state_region = STATE_SKOPIA
			}
			create_country = {
				tag = NMAC
				origin = this
				state = s:STATE_SKOPIA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:ERUM }
				owns_entire_state_region = STATE_NORTHERN_THRACE
			}
			create_country = {
				tag = ERUM
				origin = this
				state = s:STATE_NORTHERN_THRACE.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:THRA }
				owns_entire_state_region = STATE_WESTERN_THRACE
			}
			create_country = {
				tag = THRA
				origin = this
				state = s:STATE_WESTERN_THRACE.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:BUL }
				owns_entire_state_region = STATE_BULGARIA
			}
			create_country = {
				tag = BUL
				origin = this
				state = s:STATE_BULGARIA.region_state:TUR
			}
		}
		if = {
			limit  = {
				NOT = { exists = c:NISH }
				owns_entire_state_region = STATE_SOUTHERN_SERBIA
			}
			create_country = {
				tag = NISH
				origin = this
				state = s:STATE_SOUTHERN_SERBIA.region_state:TUR
			}		
		}
		if = {
			limit = {
				NOT = { exists = c:SER }
				owns_entire_state_region = STATE_NORTHERN_SERBIA
			}
			create_country = {
				tag = SER
				origin = this
				state = s:STATE_NORTHERN_SERBIA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:MORE }
				owns_entire_state_region = STATE_PELOPONNESE
			}	
			create_country = {
				tag = MORE
				origin = this
				state = s:STATE_PELOPONNESE.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:ION }
				owns_entire_state_region = STATE_IONIAN_ISLANDS
			}
			create_country = {
				tag = ION
				origin = this
				state = s:STATE_IONIAN_ISLANDS.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:ATHE }
				owns_entire_state_region = STATE_ATTICA
			}
			create_country = {
				tag = ATHE
				origin = this
				state = s:STATE_ATTICA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:EPI }
				owns_entire_state_region = STATE_THESSALIA
			}
			create_country = {
				tag = EPI
				origin = this
				state = s:STATE_THESSALIA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:MAC }
				owns_entire_state_region = STATE_MACEDONIA
			}
			create_country = {
				tag = MAC
				origin = this
				state = s:STATE_MACEDONIA.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:CRE }
				owns_entire_state_region = STATE_CRETE
			}
			create_country = {
				tag = CRE
				origin = this
				state = s:STATE_CRETE.region_state:TUR
			}
		}
		if = {
			limit = {
				NOT = { exists = c:NAXO }
			}
			create_country = {
				tag = NAXO
				origin = this
				state = s:STATE_WEST_AEGEAN_ISLANDS.region_state:TUR
			}
		}
	}
}

balkfm_turkboom_effect = {
	c:TUR ?= {
		if = {
			limit = {
				AND = {
					NOT = { exists = c:GRE }
					owns_entire_state_region = STATE_ATTICA
					owns_entire_state_region = STATE_PELOPONNESE
				}
			}
			create_country = {
				tag = GRE
				origin = this
				state = s:STATE_ATTICA.region_state:TUR
				state = s:STATE_PELOPONNESE.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					owns_entire_state_region = STATE_THESSALIA
					exists = c:GRE
				}
			}
			s:STATE_THESSALIA = {
				random_scope_state = {
					set_state_owner = c:GRE
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:BUL }
					owns_entire_state_region = STATE_BULGARIA
					owns_entire_state_region = STATE_NORTHERN_THRACE
					owns_entire_state_region = STATE_WESTERN_THRACE
				}
			}
			create_country = {
				tag = BUL
				origin = this
				state = s:STATE_BULGARIA.region_state:TUR
				state = s:STATE_NORTHERN_THRACE.region_state:TUR
				state = s:STATE_WESTERN_THRACE.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = { exists = c:BUL }
					owns_entire_state_region = STATE_BULGARIA
					owns_entire_state_region = STATE_NORTHERN_THRACE
				}
			}
			create_country = {
				tag = BUL
				origin = this
				state = s:STATE_BULGARIA.region_state:TUR
				state = s:STATE_NORTHERN_THRACE.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = { exists = c:BUL }
					owns_entire_state_region = STATE_BULGARIA
				}
			}
			create_country = {
				tag = BUL
				origin = this
				state = s:STATE_BULGARIA.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					NOT = { exists = c:BUL }
					NOT = { exists = c:ERUM }
					owns_entire_state_region = STATE_NORTHERN_THRACE
				}
			}
			create_country = {
				tag = ERUM # mwahaha no flavor for you
				origin = this
				state = s:STATE_NORTHERN_THRACE.region_state:TUR
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:SER }
					owns_entire_state_region = STATE_SOUTHERN_SERBIA
				}
			}
			create_country = {
				tag = SER
				origin = this
				state = s:STATE_NORTHERN_SERBIA.region_state:TUR
				state = s:STATE_SOUTHERN_SERBIA.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					exists = c:SER
					owns_entire_state_region = STATE_SOUTHERN_SERBIA
					owns_entire_state_region = STATE_SKOPIA
				}
			}
			s:STATE_SKOPIA = {
				random_scope_state = {
					set_state_owner = c:SER
				}
			}
			s:STATE_SOUTHERN_SERBIA = {
				random_scope_state = {
					set_state_owner = c:SER
				}
			}
		}
		else_if = {
			limit = {
				AND = {
					exists = c:SER
					owns_entire_state_region = STATE_SOUTHERN_SERBIA
				}
			}
			s:STATE_SOUTHERN_SERBIA = {
				random_scope_state = {
					set_state_owner = c:SER
				}
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:ALB }
					owns_entire_state_region = STATE_ALBANIA
				}
			}
			create_country = {
				tag = ALB
				origin = this
				state = s:STATE_ALBANIA.region_state:TUR
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:MAC }
					owns_entire_state_region = STATE_MACEDONIA
				}
			}
			create_country = {
				tag = MAC
				origin = this
				state = s:STATE_MACEDONIA.region_state:TUR
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:BOS }
					owns_entire_state_region = STATE_BOSNIA
				}
			}
			create_country = {
				tag = BOS
				origin = this
				state = s:STATE_BOSNIA.region_state:TUR
			}
		}
		if = {
			limit = {
				AND = {
					NOT = { exists = c:MON }
					owns_entire_state_region = STATE_MONTENEGRO
				}
			}
			create_country = {
				tag = MON
				origin = this
				state = s:STATE_MONTENEGRO.region_state:TUR
			}
		}
		else_if = {
			limit = {
				AND = {
					c:MON ?= {
						NOT = {
							owns_entire_state_region = STATE_MONTENEGRO
						}
					}
				}
			}
			s:STATE_MONTENEGRO = {
				every_scope_state = {
					limit = {
						owner = {
							c:TUR = this
						}
					}
					set_state_owner = c:MON
				}
			}
		}
		if = {
			limit = {
				c:WAL ?= {
					NOT = {
						owns_entire_state_region = STATE_DOBRUDJA
					}
				}
				has_state_in_state_region = STATE_DOBRUDJA
			}
			s:STATE_DOBRUDJA = {
				random_scope_state = {
					limit = {
						owner = {
							country_has_primary_culture = cu:turkish
						}
					}
					set_state_owner = c:WAL
				}
			}
		}
		if = {
			limit = {
				NOT = {
					exists = c:CRE
				}
				owns_entire_state_region = STATE_CRETE
			}
			create_country = {
				tag = CRE
				origin = this
				state = s:STATE_CRETE.region_state:TUR
			}
		}
	}
}
