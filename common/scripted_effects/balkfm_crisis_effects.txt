## EASTERN CRISIS EFFECTS ##

balkfm_recruit_local_power = {
	if = {
		limit = {
			any_country = {
				NOT = { has_variable = balkfm_crisis_offered }
				OR = {
					capital = { region = sr:region_balkans }
					c:MOL ?= this # this is hacky, but they technically aren't in the Balkans per the regions
					c:WAL ?= this
				}
			}
		}
		random_country = {
			limit = {
				capital = {
					region = sr:region_balkans
				}
				NOT = { has_variable = balkfm_crisis_offered }
			}
			trigger_event = {
				id = balkfm.101 # Recruit Local Power
			}
		}
	}
}

balkfm_recruit_great_power = {
	if = {
		limit = {
			any_country = {
				NOT = { has_variable = balkfm_crisis_offered }
				NOT = { has_variable = balkfm_crisis_target }
				has_interest_marker_in_region = region_balkans
				country_rank = rank_value:great_power
			}
		}
		random_country = {
			limit = {
				NOT = { has_variable = balkfm_crisis_offered }
				has_interest_marker_in_region = region_balkans
				country_rank = rank_value:great_power
			}
			trigger_event = {
				id = balkfm.102 # Recruit Great Power
			}
		}
	}
}

balkfm_build_crisis = {
	random_diplomatic_play = {
		limit = {
			is_diplomatic_play_type = dp_balkfm_crisis
		}
		save_scope_as = balkfm_crisis_scope
	}
	c:TUR = {
		every_subject_or_below = {
			limit = {
				NOT = { any_overlord_or_above = { NOT = { ROOT = this } } }
				OR = {
					NOT = {
						is_country_type = unrecognized
					}
					is_subject_type = subject_type_protectorate
					is_subject_type = subject_type_dominion
					is_subject_type = subject_type_puppet
				}
				has_variable = balkfm_crisis_attacker
			}
			make_independent = yes
		}
		trigger_event = {
			id = balkfm.104 # GEC Start (Initiator / Target)
			popup = yes
		}
		trigger_event = {
			id = balkfm.103 # Herzegovina Uprising
			days = 15
			popup = yes
		}
	}
	every_country = {
		limit = {
			balkfm_crisis_participant_trigger = yes
			has_truce_with = c:TUR
		}
		end_truce = {
			country = c:TUR
		}
	}
	every_country = {
		limit = {
			balkfm_crisis_participant_trigger = yes
		}
		trigger_event = {
			id = balkfm.105 # GEC Start (Attackers / Defenders)
			popup = yes
		}
	}
}

balkfm_stage_crisis_characters = {
# event_window_crisis has this layout, from top to bottom, attackers on the left & defenders on the right:
# 1 4 <--attackers and defenders
# 2 5 <--initiator and target
# 3 6 <-- attackers and defenders
# you need to save each character scope into the variable "crisis_scope_(1-6)" which is read by the gui

	# First round of assignments
	random_country = {
		limit = {
			has_variable = balkfm_crisis_attacker
			NOT = { has_variable = balkfm_crisis_starter }
			country_rank = rank_value:great_power
		}
		ruler = {
			save_scope_as = crisis_scope_1
		}
	}		
	random_country = {
		limit = {
			has_variable = balkfm_crisis_starter
		}
		ruler = {
			save_scope_as = crisis_scope_2
		}
	}
	random_country = {
		limit = {
			has_variable = balkfm_crisis_attacker
			NOT = {
				ruler = {
					THIS = scope:crisis_scope_1
					THIS = scope:crisis_scope_2
				}
			}
		}
		ruler = {
			save_scope_as = crisis_scope_3
		}
	}
	random_country = {
		limit = {
			has_variable = balkfm_crisis_defender
		}
		ruler = {
			save_scope_as = crisis_scope_4
		}
	}
	random_country = {
		limit = {
			has_variable = balkfm_crisis_target
		}
		ruler = {
			save_scope_as = crisis_scope_5
		}
	}
	random_country = {
		limit = {
			has_variable = balkfm_crisis_defender
			NOT = {
				ruler = {
					scope:crisis_scope_4 = this
				}
			}
		}
		ruler = { 
			save_scope_as = crisis_scope_6
		}
	}
	
	# Second round checking for missing scopes
	if = {
		limit = {
			NOT = {
				exists = scope:crisis_scope_1
			}
		}
		random_country = {
			limit = {
				has_variable = balkfm_crisis_attacker
				NOT = {
					THIS = scope:crisis_scope_3 # There should be at least two minors involed in the crisis
				}
			}
			save_scope_as = crisis_scope_1
		}
	}
	if = {
		limit = {
			NOT = {
				exists = scope:crisis_scope_4
			}
		}
		random_character = {
			limit = {
				has_variable = balkfm_is_hakki_pasha
			}
			save_scope_as = crisis_scope_4
		}
	}
	if = {
		limit = {
			NOT = {
				exists = scope:crisis_scope_6
			}
		}
		random_character = {
			limit = {
				has_variable = balkfm_is_nuri_pasha
			}
			save_scope_as = crisis_scope_6
		}
	}

	# Assigning scopes to variables so they can be accessed by the gui
	set_variable = {
		name = balkfm_crisis_var_1
		value = scope:crisis_scope_1
	}
	set_variable = {
		name = balkfm_crisis_var_2
		value = scope:crisis_scope_2
	}
	set_variable = {
		name = balkfm_crisis_var_3
		value = scope:crisis_scope_3
	}
	set_variable = {
		name = balkfm_crisis_var_4
		value = scope:crisis_scope_4
	}
	set_variable = {
		name = balkfm_crisis_var_5
		value = scope:crisis_scope_5
	}
	set_variable = {
		name = balkfm_crisis_var_6
		value = scope:crisis_scope_6
	}
}

balkfm_generate_hakki_pasha = {
	# Kurt İsmail Hakkı Pasha, Commander of the Anatolian Army 1877-1878
	if = {
		limit = {
			NOT = {
				has_global_variable = balkfm_hakki_pasha_spawned
			}
		}
		set_global_variable = balkfm_hakki_pasha_spawned
		create_character = {
			first_name = Kurt_Ismail
			last_name = Hakki
			historical = yes
			age = 59 # age in 1877 at the start of the Russo-Turkish War
			culture = cu:turkish
			religion = rel:sunni
			interest_group = ig_armed_forces
			ideology = ideology_royalist
			is_general = yes
			traits = {
				imposing
				direct
				expert_offensive_planner
			}
			on_created = {
				set_variable = balkfm_is_hakki_pasha
				set_variable = balkfm_pasha_var
			}
		}
	}
}

balkfm_generate_osman_nuri = {
	# Osman Nuri Pasha, Ottoman field marshal and one of the most decorated Pashas ever
	if = {
		limit = {
			NOT = {
				has_global_variable = balkfm_osman_nuri_spawned
			}
		}
		set_global_variable = balkfm_osman_nuri_spawned
		create_character = {
			first_name = Osman
			last_name = Nuri
			historical = yes
			age = 59 # age in 1877 at the start of the Russo-Turkish War
			culture = cu:turkish
			religion = rel:sunni
			interest_group = ig_armed_forces
			ideology = ideology_royalist
			is_general = yes
			traits = {
				persistent
				engineer
				expert_defensive_strategist
			}
			on_created = {
				set_variable = balkfm_is_nuri_pasha
				set_variable = balkfm_pasha_var
			}
		}
	}
}

balkfm_clean_up_crisis_variables = {
	remove_variable = balkfm_crisis_rejected
	remove_variable = balkfm_crisis_defender
	remove_variable = balkfm_crisis_starter
	remove_variable = balkfm_crisis_attacker
	remove_variable = balkfm_crisis_target
	remove_variable = balkfm_crisis_var_1
	remove_variable = balkfm_crisis_var_2
	remove_variable = balkfm_crisis_var_3
	remove_variable = balkfm_crisis_var_4
	remove_variable = balkfm_crisis_var_5
	remove_variable = balkfm_crisis_var_6
}

balkfm_clean_up_berlin_variables = {
}
	

## BALKAN WARS EFFECTS ##


## TURK-SPLOSION EFFECTS ##
balkfm_minor_turkboom = {
}

balkfm_major_turkboom = {
	if = {
		limit = {
			AND = {
				NOT = { exists = c:GRE }
				owns_entire_state_region = STATE_ATTICA
				owns_entire_state_region = STATE_PELOPONNESE
			}
		}
		create_country = {
			tag = GRE
			origin = this
			state = s:STATE_ATTICA.region_state:TUR
			state = s:STATE_PELOPONNESE.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				owns_entire_state_region = STATE_THESSALIA
				exists = c:GRE
			}
		}
		s:STATE_THESSALIA = {
			random_scope_state = {
				set_state_owner = c:GRE
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:BUL }
				owns_entire_state_region = STATE_BULGARIA
				owns_entire_state_region = STATE_NORTHERN_THRACE
				owns_entire_state_region = STATE_WESTERN_THRACE
			}
		}
		create_country = {
			tag = BUL
			origin = this
			state = s:STATE_BULGARIA.region_state:TUR
			state = s:STATE_NORTHERN_THRACE.region_state:TUR
			state = s:STATE_WESTERN_THRACE.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				NOT = { exists = c:BUL }
				owns_entire_state_region = STATE_BULGARIA
				owns_entire_state_region = STATE_NORTHERN_THRACE
			}
		}
		create_country = {
			tag = BUL
			origin = this
			state = s:STATE_BULGARIA.region_state:TUR
			state = s:STATE_NORTHERN_THRACE.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				NOT = { exists = c:BUL }
				owns_entire_state_region = STATE_BULGARIA
			}
		}
		create_country = {
			tag = BUL
			origin = this
			state = s:STATE_BULGARIA.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				NOT = { exists = c:BUL }
				NOT = { exists = c:ERUM }
				owns_entire_state_region = STATE_NORTHERN_THRACE
			}
		}
		create_country = {
			tag = ERUM # mwahaha no flavor for you
			origin = this
			state = s:STATE_NORTHERN_THRACE.region_state:TUR
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:SER }
				owns_entire_state_region = STATE_SOUTHERN_SERBIA
			}
		}
		create_country = {
			tag = SER
			origin = this
			state = s:STATE_NORTHERN_SERBIA.region_state:TUR
			state = s:STATE_SOUTHERN_SERBIA.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				exists = c:SER
				owns_entire_state_region = STATE_SOUTHERN_SERBIA
				owns_entire_state_region = STATE_SKOPIA
			}
		}
		s:STATE_SKOPIA = {
			random_scope_state = {
				set_state_owner = c:SER
			}
		}
		s:STATE_SOUTHERN_SERBIA = {
			random_scope_state = {
				set_state_owner = c:SER
			}
		}
	}
	else_if = {
		limit = {
			AND = {
				exists = c:SER
				owns_entire_state_region = STATE_SOUTHERN_SERBIA
			}
		}
		s:STATE_SOUTHERN_SERBIA = {
			random_scope_state = {
				set_state_owner = c:SER
			}
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:ALB }
				owns_entire_state_region = STATE_ALBANIA
			}
		}
		create_country = {
			tag = ALB
			origin = this
			state = s:STATE_ALBANIA.region_state:TUR
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:MAC }
				owns_entire_state_region = STATE_MACEDONIA
			}
		}
		create_country = {
			tag = MAC
			origin = this
			state = s:STATE_MACEDONIA.region_state:TUR
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:BOS }
				owns_entire_state_region = STATE_BOSNIA
			}
		}
		create_country = {
			tag = BOS
			origin = this
			state = s:STATE_BOSNIA.region_state:TUR
		}
	}
	if = {
		limit = {
			AND = {
				NOT = { exists = c:MON }
				owns_entire_state_region = STATE_MONTENEGRO
			}
		}
		create_country = {
			tag = MON
			origin = this
			state = s:STATE_MONTENEGRO.region_state:TUR
		}
	}
	else_if = {
		limit = {
			AND = {
				c:MON ?= {
					NOT = {
						owns_entire_state_region = STATE_MONTENEGRO
					}
				}
			}
		}
		s:STATE_MONTENEGRO = {
			every_scope_state = {
				limit = {
					owner = {
						c:TUR = this
					}
				}
				set_state_owner = c:MON
			}
		}
	}
	if = {
		limit = {
			c:WAL ?= {
				NOT = {
					owns_entire_state_region = STATE_DOBRUDJA
				}
			}
			has_state_in_state_region = STATE_DOBRUDJA
		}
		s:STATE_DOBRUDJA = {
			random_scope_state = {
				limit = {
					owner = {
						country_has_primary_culture = cu:turkish
					}
				}
				set_state_owner = c:WAL
			}
		}
	}
	if = {
		limit = {
			NOT = {
				exists = c:CRE
			}
			owns_entire_state_region = STATE_CRETE
		}
		create_country = {
			tag = CRE
			origin = this
			state = s:STATE_CRETE.region_state:TUR
		}
	}
}